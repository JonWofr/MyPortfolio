@import "../../globalVariables";

div.customSelect {
  position: relative;

  overflow: hidden;

  display: flex;
  flex-direction: column;

  &.small {
    width: 100px;
  }

  &.medium {
    width: 200px;
  }

  &.large {
    width: 300px;
  }

  &.fluid {
    width: 100%;
  }

  &.light {
      & > select {
          color: $darker-font-color;
          
          & > option {
            background-color: $light-background-color;
            color: $darker-font-color;
          }
      }

      & > label > span.labelContent {
          color: $darkest-font-color;
      }

      & > ul {
          background-color: $lighter-background-color;

          & > li {
              & > span {
                  color: $darker-font-color;
              }
              & > button > svg > path:first-child {
                  fill: $darker-font-color;
              }
          }
      }
  }

  &.dark {
      & > select {
          color: $lighter-font-color;

          & > option {
            background-color: $dark-background-color;
            color: $lighter-font-color;
          }
      }

      & > label > span.labelContent {
          color: $lightest-font-color;
      }

      & > ul {
          background-color: $darker-background-color;

          & > li {
              & > span {
                  color: $lighter-font-color;
              }
              & > button > svg > path:first-child {
                  fill: $lighter-font-color;
              }
          }
      }
  }

  & > select {
    width: 100%;
    height: 2.875rem;

    padding: 0;
    padding-top: 0.875rem;

    box-sizing: border-box;

    border: none;

    outline: none;

    font-size: 1rem;
    line-height: 2rem;

    background-color: transparent;

    cursor: pointer;

    &:focus + label > span.labelContent,
    &:valid:not([value=""]) + label > span.labelContent,
    &:disabled:not([value=""]) + label > span.labelContent {
      transform: translateY(-2rem);

      font-size: 0.875rem;
      line-height: 0.875rem;
    }

    &:focus + label::after,
    &:valid:not([value=""]) + label::after,
    &:disabled:not([value=""]) + label::after {
      transform: translateX(0%);
    }
  }

  & > label {
    width: 100%;
    height: 2.875rem;

    position: absolute;
    left: 0;
    top: 0;

    box-sizing: border-box;

    border-bottom: 1px solid black;

    pointer-events: none;

    &::after {
        width: 100%;
        height: 100%;
    
        content: "";
    
        box-sizing: border-box;
    
        position: absolute;
        left: 0;
        bottom: -1px;
    
        border-bottom: 3px solid $primary-accent-color;
    
        transform: translateX(-100%);
    
        transition: transform 0.3s ease;
      }

    & > span.labelContent {
      position: absolute;
      bottom: 0;
      left: 0;

      font-size: 1rem;
      line-height: 2rem;

      transition: all 0.3s ease;
    }
  }

  & > ul {
    border-collapse: collapse;

    & > li {
      padding: 0.125rem 0.25rem;

      display: flex;
      justify-content: space-between;
      align-items: center;

      color: $lighter-font-color;
    }
  }
}
