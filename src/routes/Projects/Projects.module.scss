@import "../../globalVariables";

main.customSize {
  width: initial;

  margin: initial;
  margin-top: $default-header-height;
  padding: initial;

  & > #mobileFilterButton {
    height: $default-header-height;

    box-sizing: border-box;
    padding: 7.5px;

    position: fixed;
    top: 0;
    right: 0;
    z-index: 3;

    &::after {
      content: "";

      position: fixed;
      top: 0;
      left: 0;
      right: 0;

      opacity: 0;

      pointer-events: none;

      transition: opacity 0.5s ease;
    }

    &::after {
      height: calc(100vh - #{$default-header-height});

      background-color: $darkest-background-color;

      margin-top: $default-header-height;
    }

    & > svg {
      width: 35px;
      height: 35px;

      position: relative;
      z-index: 1;

      & > path:last-child {
        fill: $lightest-background-color;
      }
    }

    & > div.totalAppliedFiltersCount {
      width: 15px;
      height: 15px;

      border-radius: 50%;

      position: absolute;
      top: 5px;
      right: 5px;
      z-index: 1;

      background-color: red;

      box-shadow: $default-button-box-shadow;

      color: $lightest-font-color;
      line-height: 15px;
      font-size: 12px;
      text-align: center;

      opacity: 0;

      animation-name: fade-in;
      animation-duration: 0.75s;
      animation-timing-function: ease-in-out;
      animation-fill-mode: forwards;
    }
  }

  & > #menuToggle {
    display: none;

    &:checked {
      & + #mobileFilterButton {
        &::after {
          opacity: 0.5;

          pointer-events: initial;
        }
      }

      & ~ div.filtersBarOuterContainer {
        transform: translateX(0);
      }
    }
  }

  & > div.filtersBarOuterContainer {
    width: 70%;
    height: calc(100vh - #{$default-header-height});

    margin-top: $default-header-height;

    position: fixed;
    top: 0;
    right: 0;
    z-index: 3;

    transform: translateX(100%);

    background-color: $lightest-background-color;

    transition: transform 0.5s ease-in-out;

    & > div.filtersBarInnerContainer {
      height: 100%;

      box-sizing: border-box;
      padding: 0.5rem;

      overflow-y: scroll;
    }
  }

  & > .spinnerContainer.centered {
    width: 100px;
    height: 100px;

    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
  }

  & > .spinnerContainer.bottom {
    width: 50px;
    height: 50px;

    box-sizing: content-box;
    padding: 25px 0;
    margin: 0 auto;

    background-color: $lightest-background-color;
  }

  & > div.noResultsFoundHeadingContainer {
    width: $default-main-width;

    margin: 3rem auto 0 auto;
  }

  & > .projectsContainer {
    display: flex;
    flex-direction: column;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@media only screen and (min-width: $sm-breakpoint) {
  main.customSize > div.noResultsFoundHeadingContainer {
    width: $sm-breakpoint-main-width;
  }
}

@media only screen and (min-width: $md-breakpoint) {
  main.customSize {
    & > #mobileFilterButton {
      display: none;
    }

    & > div.filtersBarOuterContainer {
      width: initial;
      height: initial;

      margin-top: initial;

      position: initial;
      top: initial;
      left: initial;
      z-index: initial;

      transform: initial;

      transition: initial;

      & > div.filtersBarInnerContainer {
        width: $md-breakpoint-main-width;

        padding: 1rem 0;
        margin: 0 auto;

        overflow-y: visible;

        position: relative;
        z-index: 1;
      }
    }

    & > div.noResultsFoundHeadingContainer {
      width: $md-breakpoint-main-width;
    }
  }
}

@media only screen and (min-width: $lg-breakpoint) {
  main.customSize {
    & > div.filtersBarOuterContainer > div.filtersBarInnerContainer {
      width: $lg-breakpoint-main-width;
    }

    & > div.noResultsFoundHeadingContainer {
      width: $lg-breakpoint-main-width;
    }
  }
}

@media only screen and (min-width: $xl-breakpoint) {
  main.customSize {
    & > div.filtersBarOuterContainer > div.filtersBarInnerContainer {
      width: $xl-breakpoint-main-width;
    }

    & > div.noResultsFoundHeadingContainer {
      width: $xl-breakpoint-main-width;
    }
  }
}
